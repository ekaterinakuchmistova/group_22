{
	"info": {
		"_postman_id": "0ed9ca8c-a63f-4fe4-aa42-7875615f21ec",
		"name": "Group_22",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();",
							"pm.environment.set(\"token\", jsonData.token); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "44",
							"type": "string"
						},
						{
							"key": "username",
							"value": "login",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Katya",
							"type": "text"
						},
						{
							"key": "password",
							"value": "10000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}login",
					"host": [
						"{{url}}login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"// Проверка структуры json в ответе.",
							"let jsonData = pm.response.json();",
							"let schema = {",
							"    \"type\": \"object\",",
							"    \"default\": {},",
							"    \"examples\": [",
							"        {",
							"            \"person\": {",
							"                \"u_age\": 25,",
							"                \"u_name\": [",
							"                    \"Katrin\",",
							"                    1000,",
							"                    25",
							"                ],",
							"                \"u_salary_1_5_year\": 4000",
							"            },",
							"            \"qa_salary_after_12_months\": 2900.0,",
							"            \"qa_salary_after_6_months\": 2000,",
							"            \"start_qa_salary\": 1000",
							"        }",
							"    ],",
							"    \"required\": [",
							"        \"person\",",
							"        \"qa_salary_after_12_months\",",
							"        \"qa_salary_after_6_months\",",
							"        \"start_qa_salary\"",
							"    ],",
							"    \"properties\": {",
							"        \"person\": {",
							"            \"$id\": \"#/properties/person\",",
							"            \"type\": \"object\",",
							"            \"title\": \"The person schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": {},",
							"            \"examples\": [",
							"                {",
							"                    \"u_age\": 25,",
							"                    \"u_name\": [",
							"                        \"Katrin\",",
							"                        1000,",
							"                        25",
							"                    ],",
							"                    \"u_salary_1_5_year\": 4000",
							"                }",
							"            ],",
							"            \"required\": [",
							"                \"u_age\",",
							"                \"u_name\",",
							"                \"u_salary_1_5_year\"",
							"            ],",
							"            \"properties\": {",
							"                \"u_age\": {",
							"                    \"$id\": \"#/properties/person/properties/u_age\",",
							"                    \"type\": \"integer\",",
							"                    \"title\": \"The u_age schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": 0,",
							"                    \"examples\": [",
							"                        25",
							"                    ]",
							"                },",
							"                \"u_name\": {",
							"                    \"$id\": \"#/properties/person/properties/u_name\",",
							"                    \"type\": \"array\",",
							"                    \"title\": \"The u_name schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": [],",
							"                    \"examples\": [",
							"                        [",
							"                            \"Katrin\",",
							"                            1000",
							"                        ]",
							"                    ],",
							"                    \"additionalItems\": true,",
							"                    \"items\": {",
							"                        \"$id\": \"#/properties/person/properties/u_name/items\",",
							"                        \"anyOf\": [",
							"                            {",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/0\",",
							"                                \"type\": \"string\",",
							"                                \"title\": \"The first anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": \"\",",
							"                                \"examples\": [",
							"                                    \"Katrin\"",
							"                                ]",
							"                            },",
							"                            {",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/1\",",
							"                                \"type\": \"integer\",",
							"                                \"title\": \"The second anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": 0,",
							"                                \"examples\": [",
							"                                    1000,",
							"                                    25",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                },",
							"                \"u_salary_1_5_year\": {",
							"                    \"$id\": \"#/properties/person/properties/u_salary_1_5_year\",",
							"                    \"type\": \"integer\",",
							"                    \"title\": \"The u_salary_1_5_year schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": 0,",
							"                    \"examples\": [",
							"                        4000",
							"                    ]",
							"                }",
							"            },",
							"            \"additionalProperties\": true",
							"        },",
							"        \"qa_salary_after_12_months\": {",
							"            \"$id\": \"#/properties/qa_salary_after_12_months\",",
							"            \"type\": \"number\",",
							"            \"title\": \"The qa_salary_after_12_months schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0.0,",
							"            \"examples\": [",
							"                2900.0",
							"            ]",
							"        },",
							"        \"qa_salary_after_6_months\": {",
							"            \"$id\": \"#/properties/qa_salary_after_6_months\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The qa_salary_after_6_months schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                2000",
							"            ]",
							"        },",
							"        \"start_qa_salary\": {",
							"            \"$id\": \"#/properties/start_qa_salary\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The start_qa_salary schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                1000",
							"            ]",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"}",
							"",
							"pm.test('Schema is valid', function() {",
							"pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							" ",
							"// В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.",
							"",
							"let salaryReq = JSON.parse(request.data).salary;",
							"let salaryResp = jsonData.start_qa_salary;",
							"let salaryResp_6 = jsonData.qa_salary_after_6_months;",
							"let salaryResp_12 = jsonData.qa_salary_after_12_months;",
							"let salaryResp_1_5 = jsonData.person.u_salary_1_5_year;",
							"",
							"pm.test(\"CheckSalary\", function() {",
							"    ",
							"pm.expect(salaryReq).to.eql(salaryResp);",
							"});",
							"",
							"pm.test(\"CheckSalary2\", function() {",
							"pm.expect(salaryReq*2).to.eql(salaryResp_6);",
							"});",
							"pm.test(\"CheckSalary3\", function() {",
							"pm.expect(salaryReq*2.9).to.eql(salaryResp_12);",
							"});",
							"pm.test(\"CheckSalary4\", function() {",
							"pm.expect(salaryReq*4).to.eql(salaryResp_1_5);",
							"});",
							" // Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса http://162.55.220.72:5005/get_test_user",
							"",
							"",
							"pm.environment.set(\"salaryResp_1_5\", jsonData.person.u_salary_1_5_year);",
							"pm.environment.get(\"salaryResp_1_5\");",
							"console.log(salaryResp_1_5);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"age\": 25,\n    \"salary\": 1000,\n    \"name\": \"Katrin\",\n    \"auth_token\": \"{{token}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}user_info",
					"host": [
						"{{url}}user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"//Проверка структуры json в ответе.",
							"",
							"let jsonData = pm.response.json();",
							"let schema ={",
							"    ",
							"    \"type\": \"object\",",
							"    \"default\": {},",
							"    \"examples\": [",
							"        {",
							"            \"age\": 25,",
							"            \"name\": \"Katri\",",
							"            \"salary\": [",
							"                1200,",
							"                \"2400\",",
							"                \"3600\"",
							"            ]",
							"        }",
							"    ],",
							"    \"required\": [",
							"        \"age\",",
							"        \"name\",",
							"        \"salary\"",
							"    ],",
							"    \"properties\": {",
							"        \"age\": {",
							"            \"$id\": \"#/properties/age\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The age schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                25",
							"            ]",
							"        },",
							"        \"name\": {",
							"            \"$id\": \"#/properties/name\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The name schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"Katri\"",
							"            ]",
							"        },",
							"        \"salary\": {",
							"            \"$id\": \"#/properties/salary\",",
							"            \"type\": \"array\",",
							"            \"title\": \"The salary schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": [],",
							"            \"examples\": [",
							"                [",
							"                    1200,",
							"                    \"2400\"",
							"                ]",
							"            ],",
							"            \"additionalItems\": true,",
							"            \"items\": {",
							"                \"$id\": \"#/properties/salary/items\",",
							"                \"anyOf\": [",
							"                    {",
							"                        \"$id\": \"#/properties/salary/items/anyOf/0\",",
							"                        \"type\": \"integer\",",
							"                        \"title\": \"The first anyOf schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": 0,",
							"                        \"examples\": [",
							"                            1200",
							"                        ]",
							"                    },",
							"                    {",
							"                        \"$id\": \"#/properties/salary/items/anyOf/1\",",
							"                        \"type\": \"string\",",
							"                        \"title\": \"The second anyOf schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": \"\",",
							"                        \"examples\": [",
							"                            \"2400\",",
							"                            \"3600\"",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"}",
							"",
							"pm.test('Schema is valid', function() {",
							"pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"//В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.",
							"",
							" salary = jsonData.salary[0]",
							" salary_2 = jsonData.salary[1]",
							" salary_3 =  + jsonData.salary[2]",
							"",
							" pm.test(\"Check_salary\", function () {",
							"     let jsonData = pm.response.json();",
							"        pm.expect(jsonData.salary[2]).to.eql(\"3600\");",
							"     });",
							" pm.test(\"Check_salary\", function () {",
							"     let jsonData = pm.response.json();",
							"     pm.expect(jsonData.salary[1]).to.eql(\"2400\");",
							"    });",
							"",
							"    pm.test(\"Check_salary\", function () {",
							"     let jsonData = pm.response.json();",
							"     pm.expect(jsonData.salary[0]).to.eql(1200);",
							"    })",
							"",
							"// вывести тип данных",
							" console.log(\"salary = \" + salary, typeof(salary));",
							" console.log(\"salary_2 \" + salary_2, typeof(salary_2));",
							" console.log(\"salary_3_numb \" + parseInt(salary_3), typeof(parseInt(salary_3)));",
							"",
							"//проверить, что 2-й элемент массива salary больше 1-го и 0-го",
							" ",
							"  let salaryP = [\"salary\", \"salary_2\", \"salary_3\"]",
							"  salary = 1200;",
							"  salary_2 = \"2400\";",
							"  salary_3 = \"3600\";",
							"",
							"  pm.test(\"salaryP_Comparison\", function () {",
							"  pm.expect(salary < salary_2).to.be.true;",
							"  pm.expect(salary_2 < salary_3).to.be.true;",
							"    })",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "25",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1200",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Katri",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}new_data",
					"host": [
						"{{url}}new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();",
							"let schema = {",
							"    ",
							"    \"type\": \"object\",",
							"    \"default\": {},",
							"    \"examples\": [",
							"        {",
							"            \"age\": 26,",
							"            \"daily_food\": 0.14400000000000002,",
							"            \"daily_sleep\": 30.0,",
							"            \"name\": \"Kat\"",
							"        }",
							"    ],",
							"    \"required\": [",
							"        \"age\",",
							"        \"daily_food\",",
							"        \"daily_sleep\",",
							"        \"name\"",
							"    ],",
							"    \"properties\": {",
							"        \"age\": {",
							"            \"$id\": \"#/properties/age\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The age schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                26",
							"            ]",
							"        },",
							"        \"daily_food\": {",
							"            \"$id\": \"#/properties/daily_food\",",
							"            \"type\": \"number\",",
							"            \"title\": \"The daily_food schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0.0,",
							"            \"examples\": [",
							"                0.14400000000000002",
							"            ]",
							"        },",
							"        \"daily_sleep\": {",
							"            \"$id\": \"#/properties/daily_sleep\",",
							"            \"type\": \"number\",",
							"            \"title\": \"The daily_sleep schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0.0,",
							"            \"examples\": [",
							"                30.0",
							"            ]",
							"        },",
							"        \"name\": {",
							"            \"$id\": \"#/properties/name\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The name schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"Kat\"",
							"            ]",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"}",
							"",
							"pm.test('Schema is valid', function() {",
							"pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"",
							"",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"let weight = pm.response.json();",
							"let weightF = weight *0.012; ",
							"let weightS = weight *2.5;",
							"",
							"pm.test(\"daily_food = weightF\", function() {",
							"pm.expect(jsonData.daily_food).to.eql(request.data.weight*0.012);",
							"});",
							"pm.test(\"daily_sleep = weightS\", function() {",
							"pm.expect(jsonData.daily_sleep).to.eql(request.data.weight*2.5);",
							"});",
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "26",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "12",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Kat",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}test_pet_info\n",
					"host": [
						"{{url}}test_pet_info\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();",
							"let schema = {",
							"\"type\": \"object\",",
							"    \"default\": {},",
							"    \"examples\": [",
							"        {",
							"            \"age\": \"25\",",
							"            \"family\": {",
							"                \"children\": [",
							"                    [",
							"                        \"Alex\",",
							"                        24",
							"                    ],",
							"                    [",
							"                        \"Kate\",",
							"                        12",
							"                    ]",
							"                ],",
							"                \"u_salary_1_5_year\": 16000",
							"            },",
							"            \"name\": \"Katrin\",",
							"            \"salary\": 4000",
							"        }",
							"    ],",
							"    \"required\": [",
							"        \"age\",",
							"        \"family\",",
							"        \"name\",",
							"        \"salary\"",
							"    ],",
							"    \"properties\": {",
							"        \"age\": {",
							"            \"$id\": \"#/properties/age\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The age schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"25\"",
							"            ]",
							"        },",
							"        \"family\": {",
							"            \"$id\": \"#/properties/family\",",
							"            \"type\": \"object\",",
							"            \"title\": \"The family schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": {},",
							"            \"examples\": [",
							"                {",
							"                    \"children\": [",
							"                        [",
							"                            \"Alex\",",
							"                            24",
							"                        ],",
							"                        [",
							"                            \"Kate\",",
							"                            12",
							"                        ]",
							"                    ],",
							"                    \"u_salary_1_5_year\": 16000",
							"                }",
							"            ],",
							"            \"required\": [",
							"                \"children\",",
							"                \"u_salary_1_5_year\"",
							"            ],",
							"            \"properties\": {",
							"                \"children\": {",
							"                    \"$id\": \"#/properties/family/properties/children\",",
							"                    \"type\": \"array\",",
							"                    \"title\": \"The children schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": [],",
							"                    \"examples\": [",
							"                        [",
							"                            [",
							"                                \"Alex\",",
							"                                24",
							"                            ],",
							"                            [",
							"                                \"Kate\",",
							"                                12",
							"                            ]",
							"                        ]",
							"                    ],",
							"                    \"additionalItems\": true,",
							"                    \"items\": {",
							"                        \"$id\": \"#/properties/family/properties/children/items\",",
							"                        \"anyOf\": [",
							"                            {",
							"                                \"$id\": \"#/properties/family/properties/children/items/anyOf/0\",",
							"                                \"type\": \"array\",",
							"                                \"title\": \"The first anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": [],",
							"                                \"examples\": [",
							"                                    [",
							"                                        \"Alex\",",
							"                                        24",
							"                                    ]",
							"                                ],",
							"                                \"additionalItems\": true,",
							"                                \"items\": {",
							"                                    \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items\",",
							"                                    \"anyOf\": [",
							"                                        {",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items/anyOf/0\",",
							"                                            \"type\": \"string\",",
							"                                            \"title\": \"The first anyOf schema\",",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",",
							"                                            \"default\": \"\",",
							"                                            \"examples\": [",
							"                                                \"Alex\"",
							"                                            ]",
							"                                        },",
							"                                        {",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items/anyOf/1\",",
							"                                            \"type\": \"integer\",",
							"                                            \"title\": \"The second anyOf schema\",",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",",
							"                                            \"default\": 0,",
							"                                            \"examples\": [",
							"                                                24",
							"                                            ]",
							"                                        }",
							"                                    ]",
							"                                }",
							"                            },",
							"                            {",
							"                                \"$id\": \"#/properties/family/properties/children/items/anyOf/1\",",
							"                                \"type\": \"array\",",
							"                                \"title\": \"The second anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": [],",
							"                                \"examples\": [",
							"                                    [",
							"                                        \"Kate\",",
							"                                        12",
							"                                    ]",
							"                                ],",
							"                                \"additionalItems\": true,",
							"                                \"items\": {",
							"                                    \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items\",",
							"                                    \"anyOf\": [",
							"                                        {",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items/anyOf/0\",",
							"                                            \"type\": \"string\",",
							"                                            \"title\": \"The first anyOf schema\",",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",",
							"                                            \"default\": \"\",",
							"                                            \"examples\": [",
							"                                                \"Kate\"",
							"                                            ]",
							"                                        },",
							"                                        {",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items/anyOf/1\",",
							"                                            \"type\": \"integer\",",
							"                                            \"title\": \"The second anyOf schema\",",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",",
							"                                            \"default\": 0,",
							"                                            \"examples\": [",
							"                                                12",
							"                                            ]",
							"                                        }",
							"                                    ]",
							"                                }",
							"                            }",
							"                        ]",
							"                    }",
							"                },",
							"                \"u_salary_1_5_year\": {",
							"                    \"$id\": \"#/properties/family/properties/u_salary_1_5_year\",",
							"                    \"type\": \"integer\",",
							"                    \"title\": \"The u_salary_1_5_year schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": 0,",
							"                    \"examples\": [",
							"                        16000",
							"                    ]",
							"                }",
							"            },",
							"            \"additionalProperties\": true",
							"        },",
							"        \"name\": {",
							"            \"$id\": \"#/properties/name\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The name schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"Katrin\"",
							"            ]",
							"        },",
							"        \"salary\": {",
							"            \"$id\": \"#/properties/salary\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The salary schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                4000",
							"            ]",
							"        } ",
							"    },",
							"    \"additionalProperties\": true",
							"}",
							"pm.test('Schema is valid', function() { ",
							"pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"",
							"    //Проверить что значение поля name = значению переменной name из окружения",
							"",
							"let N = JSON.parse(responseBody);",
							"pm.environment.set(\"name\", N.name);",
							"pm.test(\"Response\", function(){",
							"pm.expect(pm.response.json().name).to.eql(pm.environment.get(\"name\"))    ",
							"});",
							"",
							"let jsonDataBody = pm.response.json();",
							"let top = \"25\";",
							"pm.test(\"Data\",() => {",
							"     pm.expect(jsonDataBody.age).to.be.an(\"string\");",
							"pm.expect(jsonDataBody.age).to.eql(top);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "25",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salaryResp_1_5}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Katrin",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}get_test_user\n",
					"host": [
						"{{url}}get_test_user\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"console.log(jsonData.length);  ",
							"let i = jsonData.length;",
							"function getRandomInt (i) {",
							"    return Math.floor(Math.random() * i);",
							"} ",
							"",
							"console.log(jsonData [getRandomInt (i)]);",
							"console.log(jsonData [getRandomInt(1).Cur_ID]);",
							"pm.environment.set(\"curr_code\", jsonData [getRandomInt(1).Cur_ID]);",
							"console.log(jsonData[0]);",
							"console.log([getRandomInt(1).Cur_ID]);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}currency",
					"host": [
						"{{url}}currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();",
							"let schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"$id\": \"http://example.com/example.json\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The root schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"examples\": [",
							"        {  ",
							"            \"Cur_Abbreviation\": \"INR\",",
							"            \"Cur_ID\": 476,",
							"            \"Cur_Name\": \"Индийских рупий\",",
							"            \"Cur_OfficialRate\": 3.4303,",
							"            \"Cur_Scale\": 100,",
							"            \"Date\": \"2021-09-22T00:00:00\"",
							"        }",
							"    ],",
							"    \"required\": [",
							"        \"Cur_Abbreviation\",",
							"        \"Cur_ID\",",
							"        \"Cur_Name\",",
							"        \"Cur_OfficialRate\",",
							"        \"Cur_Scale\",",
							"        \"Date\"",
							"    ],",
							"    \"properties\": {",
							"        \"Cur_Abbreviation\": {",
							"            \"$id\": \"#/properties/Cur_Abbreviation\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The Cur_Abbreviation schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"INR\"",
							"            ]",
							"        },",
							"        \"Cur_ID\": {",
							"            \"$id\": \"#/properties/Cur_ID\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The Cur_ID schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                476",
							"            ]",
							"        },",
							"        \"Cur_Name\": {",
							"            \"$id\": \"#/properties/Cur_Name\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The Cur_Name schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"Индийских рупий\"",
							"            ]",
							"        },",
							"        \"Cur_OfficialRate\": {",
							"            \"$id\": \"#/properties/Cur_OfficialRate\",",
							"            \"type\": \"number\",",
							"            \"title\": \"The Cur_OfficialRate schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0.0,",
							"            \"examples\": [",
							"                3.4303",
							"            ]",
							"        },",
							"        \"Cur_Scale\": {",
							"            \"$id\": \"#/properties/Cur_Scale\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The Cur_Scale schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                100",
							"            ]",
							"        },",
							"        \"Date\": {",
							"            \"$id\": \"#/properties/Date\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The Date schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"2021-09-22T00:00:00\"",
							"            ]",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"}",
							"pm.test('Schema is valid', function() {",
							"pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{curr_code}} ",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}curr_byn",
					"host": [
						"{{url}}curr_byn"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "salaryResp_1_5",
			"value": ""
		},
		{
			"key": 4000,
			"value": ""
		}
	]
}